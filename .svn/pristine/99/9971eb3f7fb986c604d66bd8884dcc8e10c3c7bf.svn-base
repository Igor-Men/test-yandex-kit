<?php
/**
 * WebProduction Shop (wpshop)
 *
 * @copyright (C) 2011-2015 WebProduction (tm) <webproduction.com.ua>
 *
 * This program is commercial software; you cannot redistribute it and/or
 * modify.
 */

/**
 * Сервис по работе с файлами
 */
class Shop_FileService extends ServiceUtils_AbstractService {

    /**
     * Получить все файлы
     *
     * @return ShopFile
     */
    public function getFilesAll() {
        $x = $this->getObjectsAll('ShopFile');
        $x->setDeleted(0);
        $x->setOrder('id', 'DESC');
        return $x;
    }

    /**
     * Получить файл по ID
     *
     * @return ShopFile
     */
    public function getFileByID($id) {
        try {
            return $this->getObjectByID($id, 'ShopFile');
        } catch (Exception $e) {

        }
        throw new ServiceUtils_Exception('Shop-object(ShopFile) by id not found');
    }

    /**
     * Добавить файл
     *
     * @param User $user
     * @param string $path
     * @param string $name
     * @param string $type
     *
     * @return ShopFile
     */
    public function addFile(User $user, $path, $name, $type) {
        try {
            SQLObject::TransactionStart();

            $md5 = md5(file_get_contents($path));

            $file = new ShopFile();
            $file->setFile($md5);
            $file->setCdate(date('Y-m-d H:i:s'));
            $file->setUserid($user->getId());
            $file->setName($name);
            $file->setContenttype($type);
            $file->insert();

            copy($path, PackageLoader::Get()->getProjectPath().'media/file/'.$md5);

            SQLObject::TransactionCommit();

            return $file;
        } catch (Exception $ge) {
            SQLObject::TransactionRollback();
            throw $ge;
        }
    }

    /**
     * Редактирование файла
     *
     * @param User $user
     * @param ShopFile $file
     * @param string $path
     * @param string $type
     *
     * @return ShopFile
     */
    public function editFile(User $user, ShopFile $file, $path, $type) {
        $user;

        try {
            SQLObject::TransactionStart();

            $md5 = md5(file_get_contents($path));

            $file->setFile($md5);
            $file->setCdate(date('Y-m-d H:i:s'));
            //$file->setUserid($user->getId());
            $file->setContenttype($type);
            $file->update();

            copy($path, PackageLoader::Get()->getProjectPath().'media/file/'.$md5);

            SQLObject::TransactionCommit();

            return $file;
        } catch (Exception $ge) {
            SQLObject::TransactionRollback();
            throw $ge;
        }
    }

    /**
     * Удалить файл
     *
     * @param User $user
     * @param ShopFile $file
     */
    public function deleteFile(User $user, ShopFile $file) {
        $user;

        try {
            SQLObject::TransactionStart();

            $file->setDeleted(1);
            $file->update();

            SQLObject::TransactionCommit();
        } catch (Exception $ge) {
            SQLObject::TransactionRollback();
            throw $ge;
        }
    }

    /**
     * Получить сервис.
     * Сервис можно подменивать через метод ::Set()
     *
     * @return Shop_FileService
     */
    public static function Get() {
        if (!self::$_Instance) {
            $classname = self::$_Classname;
            if ($classname) {
                self::$_Instance = new $classname();
            } else {
                self::$_Instance = new self();
            }
        }
        return self::$_Instance;
    }

    /**
     * Задать класс сервиса.
     * override-метод.
     *
     * @param string $classname
     */
    public static function Set($classname) {
        self::$_Classname = $classname;
        self::$_Instance = null;
    }

    /**
     * Подменяемый объект сервиса
     *
     * @var Shop_FileService
     */
    private static $_Instance = null;

    /**
     * Подменяемое имя класса
     *
     * @var string
     */
    private static $_Classname = false;

}