<?php
/**
 * При создании заказа или изменении статуса заказа отправить
 * SMS по шаблону статуса клиенту
 *
 * @author Maxim Miroshnichenko <max@webproduction.ua>
 * @copyright WebProduction
 * @package OneClick
 */
class Shop_Event_OrderSMSClient implements Events_IEventObserver {

    public function notify(Events_Event $event) {
        $order = $this->_getOrder($event);
        if (!$order->getClientphone()) {
            return;
        }

        // получаем шаблон
        $tpl = $order->getStatus()->getSMS();
        if (!$tpl) {
            return;
        }

        // формируем письмо
        $html = Shop::Get()->getShopService()->makeOrderTemplate($order, $tpl);

        // отправляем SMS
        try {
            Shop::Get()->getUserService()->sendSMS(
                $order->getClientphone(),
                $html
            );

            try {
                $user = Shop::Get()->getUserService()->getUser();
            } catch (Exception $e) {
                $user = false;
            }

            $comment = trim(strip_tags($html));
            $comment .= "\n\n";
            $comment .= "Отправлено sms на номер {$order->getClientphone()}";

            // после того как письмо отправлено,
            // добавляем его в комментарий к order'y
            Shop::Get()->getShopService()->addOrderSMS(
                $order,
                $user,
                $comment
            );
        } catch (Exception $smsEx) {

        }
    }

    /**
     * Получить заказ. Метод обертка для типизации.
     *
     * @param Events_Event $event
     *
     * @return ShopOrder
     */
    private function _getOrder(Events_Event $event) {
        return $event->getOrder();
    }

}