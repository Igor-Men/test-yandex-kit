<?php
class block_comment_product extends Engine_Class {

    public function process() {
        try {
            $product = Shop::Get()->getShopService()->getProductByID($this->getValue('productid'));
            $productBlock = Engine::GetContentDriver()->getContent('shop-product');

            // ловим комментарий
            if ($this->getControlValue('submitcomment')) {
                try {
                    if ($this->getControlValue('ajs') != 'ready') {
                        throw new ServiceUtils_Exception('bot');
                    }

                    Shop::Get()->getShopService()->addProductComment(
                        $product,
                        $this->getUser(),
                        $this->getControlValue('postcomment'),
                        $this->getControlValue('postplus'),
                        $this->getControlValue('postminus'),
                        $this->getControlValue('commentrating'),
                        $this->getArgumentSecure('upload_image', 'file')
                    );


                } catch (Exception $commentException) {
                    if (PackageLoader::Get()->getMode('debug')) {
                        print $commentException;
                    }

                    $productBlock->setValue('message','commenterror');
                }
            }

            // комментарии по товару
            if (!$product->getDenycomments()) {
                $comments = Shop::Get()->getShopService()->getProductComments($product);
                $a = array();
                $index = 0;
                while ($x = $comments->getNext()) {
                    $name = $x->getUsername();
                    if (!$name) {
                        try {
                            $name = htmlspecialchars(Shop::Get()->getUserService()->getUserByID($x->getUserid())->getName());
                        } catch (Exception $e) {

                        }
                    }

                    $a[] = array(
                        'id' => $x->getId(),
                        'index' => $index,
                        'content' => htmlspecialchars($x->getText()),
                        'plus' => htmlspecialchars($x->getPlus()),
                        'minus' => htmlspecialchars($x->getMinus()),
                        'datetime' => DateTime_Formatter::DateISO9075($x->getCdate()),
                        'rating' => $x->getRating(),
                        'name' => $name,
                        'image' => $x->makeImage(),
                        'imagecrop' => $x->makeImageThumb(),
                        'answer' => $x->getAnswer()
                    );

                    $index ++;

                }
                $productBlock->setValue('commentsArray', $a);

                // разрешено ли комментировать товар?
                $productBlock->setValue('allowcomment', $this->isUserAuthorized());
                if ($this->isUserAuthorized()) {
                    $ratingArray = array(0, 1, 2, 3, 4, 5);
                    $productBlock->setValue('ratingArray', $ratingArray);
                }
            }
        } catch (Exception $e) {

        }
    }

}